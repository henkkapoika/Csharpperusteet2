
Compare 2 digit numbers

namespace Solution
{
  public class SolutionClass
  {
    public static string Compare(int a, int b)
    {
      int tens1 = a / 10;
      int units1 = a % 10;
    
      int tens2 = b / 10;
      int units2 = b % 10;

    
      if ((tens1 == tens2 && units1 == units2) || (tens1 == units2 && units1 == tens2))
      {
        return "100%";
      }
      else if (tens1 == tens2 || units1 == units2 || units1 == tens2 || tens1 == units2)
      {
        return "50%";
      }
      else
      {
        return "0%";
      }
    }
  }
}



///////////////////////////////////////////////////////////////////////////////////////////


Is n divisible by x and y?

public class DivisibleNb 
{
	public static bool IsDivisible(int n, int x, int y) 

{
		return n % x == 0 && n % y == 0;
}


/////////////////////////////////////////////////////////////////////////////////////////////

Bubblesort Once



public class Kata
{
    public static int[] BubbleSortOnce(int[] input)
    {
        int[] sortedArr = (int[])input.Clone();

        for (int i = 0; i < sortedArr.Length - 1; i++)
        {
            if (sortedArr[i] > sortedArr[i + 1])
            {
                int temp = sortedArr[i];
                sortedArr[i] = sortedArr[i + 1];
                sortedArr[i + 1] = temp;
            }
        }

        return sortedArr;
    }
}



